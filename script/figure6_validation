#data pre
###â€”plot compare res--------------
gen_fre=data.frame(table(compare_res$Genus)) %>% arrange(desc(Freq)) %>% 
  mutate(gen=factor(Var1,levels=unique(Var1)))
gen_lv=gsub('^g_','',c("g_Prevotella","g_Streptococcus","g_Oribacterium","g_Tannerella","g_Veillonella",
         "g_Neisseria","g_Aggregatibacter","g_Granulicatella","g_Haemophilus"))     

data <- compare_res %>% 
  mutate(fea=gsub('^s ','',gsub('^g ','',gsub('_',' ',Feature))),
         Sign=sign(Beta),
         Genus=factor(gsub('^g_','',Genus),levels=gen_lv)) %>% 
  arrange(Genus,fea,desc(Beta)) %>% 
  mutate(Feature=factor(Feature,levels=rev(unique(Feature))),
         fea=factor(fea,levels=rev(unique(fea))))
color_gen <- c('#D54773',"#2A6EBB",'orange',"#00b9f1", '#6BBC46',"#747AFF",'#d3775b',
               "#98DF8A","#D2AF81","#9EDAE5" , "#80BDA1",  "#8491B4",  
               "#00A087", "#D0DFE6")
color_gen <- read.xlsx(paste0(nuts_wd,'/batchAll/Mediate_color.xlsx',sep=''))

  # filter(Genus %in% data$Genus) %>% 
  # mutate(Genus=factor(Genus,levels=levels(data$Genus)))

color_genus <- alpha(color_gen$color,alpha=1); names(color_genus)=gsub('^g_','',color_gen$Genus)

ht_ass <- ggplot(data, aes(x=T_value,y=fea,fill=Genus))+
  geom_segment(aes(y = fea, x = 0, yend = fea, xend = T_value,color=Genus),linewidth=0.5)+#,color='gray50')+
  geom_point(aes(fill=Genus, color=Genus),size=4.5,alpha=1)+
  geom_vline(xintercept = 0,linetype='dashed',color='gray50')+
  scale_fill_manual(values=color_genus)+
  scale_color_manual(values=color_genus)+
  scale_x_continuous(expand=c(0.15,0.15))+
  labs(x='Beta/SD\nSignificant results in validation data',y='')+
  theme_bw()+
  theme(legend.position = 'none',
        panel.grid.major.x = element_blank(),panel.grid.minor.x = element_blank(),
        legend.text = element_text(size=13),
        legend.title=element_text(size=13),
        axis.title.x=element_text(size=13),
        axis.text.y=element_text(size=13.5,face='italic',color='black'),
        axis.text.x=element_text(size=12)); ht_ass


# pdf(paste0(sv_wd,"/Validation_maaslin2_EC.pdf"),
#     width=8, height=8)
# ht_ass
# dev.off()


#interaction plot
res_est <- read.xlsx(paste0(nuts_wd,"/batchAll/Inter_spe_oral_Validation.xlsx"))
TableS_res_est <- res_est %>% #filter(species=='s_Streptococcus_mitis') %>% 
 mutate(species=gsub('_',' ',gsub('^s_','',species)),
 p_inter=sci_3dg(p_inter)) %>% 
 select(all_of(c('species','var','Pheno','OR_CI','p_inter'))) %>% 
 setnames(c('Species','Group','Pheno','OR (95% CI)','p-inter')) 

show_fig <- res_est %>% filter(species %in% c("s_Streptococcus_mitis")) %>% 
 mutate(species=gsub('_',' ',gsub('^s_','',species)),
 group=factor(ifelse(var %in% 'Above median','High level','Low level'),
 levels=c('Low level','High level')),
 p_inter=p_3dg_anno(p_inter) ) 
show_fig[,c('OR','CI_L','CI_H')] <- map(show_fig[,c('OR','CI_L','CI_H')],as.numeric)
show_fig <- show_fig %>% mutate(Pheno=factor(Pheno,levels=pheno_lvl)) %>% 
 arrange(Pheno)



data=show_fig[show_fig$species %in% spe & !grepl('Med',show_fig$value),]
data=show_fig[show_fig$species %in% spe & !grepl('Med',show_fig$value),] %>% filter(Pheno=='Oral health risk score')

p_inter <- data[,c('Pheno','p_inter')] %>% unique() %>% select('p_inter')

#errorbar
erbar <- ggplot(data,aes(x=group,y=OR))+
  geom_col(aes(fill=group,group=group,color=group), 
           width=1,alpha=1)+
  geom_errorbar(aes(ymin=CI_L,ymax = CI_H),
                width=0.5)+
  geom_hline(yintercept=1.0,color="gray")+
  labs(x='S. mitis',y=' ')+ 
  scale_fill_manual(values=col_median,name='')+
  scale_color_manual(values=col_median,name='')+
  scale_y_continuous(expand=c(0,0),limits=c(0,7))+
  guides(fill=guide_legend(ncol=1))+
  annotate('text',y=5,x=2,size=10)+
  theme(panel.grid = element_blank(),
        plot.title = element_text(size=28,hjust=0.5,color='black'),
        axis.title.x = element_text(size=28,color='black'),
        axis.title.y = element_text(size=28),
        axis.text.x = element_text(size=26,color='black'),
        axis.text.y = element_text(size=26,angle=90, hjust=0.5),
        legend.position="none", 
        legend.title=element_text(size=15),legend.text = element_text(size=15),
        legend.key.size = unit(0.5,'cm')); erbar

pdf(paste0(nuts_wd,"/batchAll/Inter_spe_oral_Smitis_Validation.pdf"),height=3.5,width=3.5)
erbar
dev.off()
